# Form implementation generated from reading ui file 'crearOrden.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QIcon, QPixmap, QMovie
from PyQt6.QtWidgets import QDialog, QTableWidgetItem
import mysql.connector as mc
from datetime import datetime
from mainGuiDemo import Ui_MainWindow
from menuSelect import menuSc_Dialog


class New_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(633, 501)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        Dialog.setSizePolicy(sizePolicy)
        self.line_pripl = QtWidgets.QLineEdit(Dialog)
        self.line_pripl.setGeometry(QtCore.QRect(30, 100, 491, 31))
        self.line_pripl.setObjectName("line_pripl")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(30, 80, 121, 21))
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(530, 100, 41, 31))
        self.pushButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/search-50.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.pushButton.setIcon(icon)
        self.pushButton.setObjectName("pushButton")
        self.list_orden = QtWidgets.QListWidget(Dialog)
        self.list_orden.setGeometry(QtCore.QRect(30, 140, 511, 281))
        self.list_orden.setObjectName("list_orden")
        self.pushButton_create = QtWidgets.QPushButton(Dialog)
        self.pushButton_create.setGeometry(QtCore.QRect(100, 430, 371, 41))
        self.pushButton_create.setObjectName("pushButton_create")
        self.pushButton_create.clicked.connect(self.crear_orden)
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(30, 20, 121, 21))
        self.label_3.setObjectName("label_3")
        self.line_nm = QtWidgets.QLineEdit(Dialog)
        self.line_nm.setGeometry(QtCore.QRect(30, 40, 121, 31))
        self.line_nm.setObjectName("line_nm")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(177, 15, 71, 61))
        self.label.setObjectName("label")
        self.label_user = QtWidgets.QLabel(Dialog)
        self.label_user.setGeometry(QtCore.QRect(480, 20, 71, 31))
        self.label_user.setText("")
        self.label_user.setObjectName("label_user")
        self.retranslateUi(Dialog)
        self.pushButton.clicked.connect(self.add_menu_or)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "AÃ±adir platillo"))
        self.label.setPixmap(QPixmap("images/ok-30.png"))
        self.label_2.setText(_translate("Dialog", "<html><head/><body><p>Buscar plato</p></body></html>"))

        self.pushButton_create.setText(_translate("Dialog", "Crear"))
        self.label_3.setText(_translate("Dialog", "<html><head/><body><p>Numero de mesa</p></body></html>"))

    def add_menu_or(self):
        loged = self.is_log()
        if loged == 'on':
            dialog = QDialog()
            ui = menuSc_Dialog()

            ui.setupUi(dialog)
            dialog.exec()
        else:
            print("not loged")

    def is_log(self):
        try:
            dbconfig = {
                'user': 'root',
                'password': 'admin123',
                'host': '127.0.0.1',
                'database': 'hikaru'
            }
            user = self.label_user.text()
            mydb = mc.connect(**dbconfig)
            mycursor = mydb.cursor()
            query = "SELECT is_log FROM users WHERE username like '" + user + "'"
            mycursor.execute(query)
            result = mycursor.fetchone()
            loged = result[0]
        except mc.Error as e:
            print(e)
        return loged



    def crear_orden(self):
        loged = self.is_log()
        if loged == 'on':
            try:
                dbconfig = {
                    'user': 'root',
                    'password': 'admin123',
                    'host': '127.0.0.1',
                    'database': 'hikaru'
                }

                ui = Ui_MainWindow()
                now = datetime.now()
                formatted_date = now.strftime('%Y-%m-%d %H:%M:%S')
                user = self.label_user.text()
                nm = self.line_nm.text()

                mydb = mc.connect(**dbconfig)
                mycursor = mydb.cursor()

                query = "INSERT INTO hikaru.ordenes (username, datetime, n_mesa, total, estado) VALUES (%s, %s, %s, null, DEFAULT)"
                values = (user, formatted_date, nm)
                mycursor.execute(query, values)
                mydb.commit()


            except mc.Error as e:
                print(e)
        else:
            print("not loged")

