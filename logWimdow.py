# Form implementation generated from reading ui file 'mainWindoW.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import mysql.connector as mc
from PyQt6.QtGui import QPixmap
from PyQt6.QtWidgets import QDialog
from mainGuiDemo import Ui_MainWindow

dbconfig = {
    'user': 'root',
    'password': 'admin123',
    'host': '127.0.0.1',
    'database': 'hikaru'
}


class log_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1200, 501)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/images/sushi-60.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        Dialog.setWindowIcon(icon)
        Dialog.setStyleSheet("background-color:rgb(244, 249, 252)")
        self.label_dbimag = QtWidgets.QLabel(Dialog)
        self.label_dbimag.setGeometry(QtCore.QRect(0, 0, 500, 501))
        self.label_dbimag.setStyleSheet("color:black;")
        self.label_dbimag.setObjectName("label_dbimag")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(710, 100, 271, 31))
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(30)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(530, 150, 631, 41))
        self.lineEdit.setStyleSheet("background-color: white;\n"
"border:4px black;\n"
"border-radius:15px;")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_2.setGeometry(QtCore.QRect(530, 280, 631, 41))
        self.lineEdit_2.setStyleSheet("background-color: white;\n"
"border:4px black;\n"
"border-radius:15px;")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(710, 230, 271, 31))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(880, 405, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(0, 123, 255);\n"
"border-radius: 15px;\n"
"color:white;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.register)
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(580, 405, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: rgb(0, 123, 255);\n"
"border-radius: 15px;\n"
"color:white;")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.login)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "sushiVent"))
        self.label_dbimag.setPixmap(QPixmap('../sushivent0.003/images/hikaru.jpg'))
        self.label_2.setText(_translate("Dialog", "<html><head/><body><p align=\"center\">Nombre de usuario</p></body></html>"))
        self.label_3.setText(_translate("Dialog", "<html><head/><body><p align=\"center\">Password</p></body></html>"))
        self.pushButton.setText(_translate("Dialog", "Registrar"))
        self.pushButton_2.setText(_translate("Dialog", "Iniciar sesi√≥n"))

    def register(self):
        try:
            mydb = mc.connect(**dbconfig)

            user = self.lineEdit.text()
            password = self.lineEdit_2.text()

            # bytePwd = password.encode('utf-8')
            # mySalt = bcrypt.gensalt()
            # hash = bcrypt.hashpw(bytePwd, mySalt)
            # pwd = hash.decode('utf-8')



            mycursor = mydb.cursor()
            query = (
                "INSERT INTO hikaru.users (username, password)"
                " VALUES (%s, %s)"
            )
            print(hash)
            values = (user, password)

            mycursor.execute(query, values)

            mydb.commit()

            self.label_2.setText("estas registrado")
        except mc.Error as e:
            print(e)

    def login(self):
        try:
            mydb = mc.connect(**dbconfig)
            user = self.lineEdit.text()
            password = self.lineEdit_2.text()
            # bytePwd = password.encode('utf-8')
            # mySalt = bcrypt.gensalt()
            # hash = bcrypt.hashpw(bytePwd, mySalt)
            # pwd = hash.decode("utf-8")
            # print(pwd)

            mycursor = mydb.cursor()
            query = "SELECT username,password from users where username = '" + user +"'and password = '" + password +"'"

            mycursor.execute(query)
            result = mycursor.fetchone()

            if result == None:
                print("fail")
            else:
                query2 = "SELECT is_admin from users where username like '"+ user + "'"
                mycursor.execute(query2)
                result2 = mycursor.fetchone()
                if result2[0] == 0:
                    try:
                        query3 = "UPDATE users SET is_log = 'on' WHERE username = '" + user + "'"
                        mycursor.execute(query3)
                        mydb.commit()
                        ui.label_6.setText(user)
                    except mc.Error as e:
                        print(e)


                elif result2[0] == 1:
                    try:
                        query4 = "UPDATE users SET is_log = 'on' WHERE username = '" + user + "'"
                        mycursor.execute(query4)
                        mydb.commit()
                        self.label_2.setText("estas log como ADMIN")
                    except mc.Error as e:
                        print(e)
        except mc.Error as e:
            self.label_2.setText("Error {}".format(e))

